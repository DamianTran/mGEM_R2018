?delete
?clear
?scale
scale(x)
pnorm(2)
pnorm?
pnorm
?pnorm
pnorm(x)
dnorm(2.71)
pnorm(2.71)
1 - pnorm(2.71)
?define
?function
?
function?
zlookup <- function(xval){}
View(zlookup)
View(zlookup)
View(zlookup)
View(zlookup)
View(zlookup)
zlessthan <- function(xval){return 1-pnorm(xval)}
remove zlookup
remove(zlookup)
remove(lung)
remove(pima)
remove(y)
1 - pnorm(-2.74) - (1 - pnorm(1.53))
pnorm?
pnorm
pnorm?
?pnorm
?pnorm
z = (50 - 60)/15
1 - pnorm(z)
1 - pnorm(2)
pnorm(2)
pnorm(-2)
qnorm(0.7)
1-pnorm(0.5244)
0.5244*1.53+15
qnorm(0.7)*1.53+15
0.5244-15/1.53
cov(x,x)
cov?
cov
>cov
?cov
pnorm(0.95)
qnorm(0.95)
qnorm(0.475)
1-qnorm(0.475)
pnorm(1.959964)
qnorm(99.5)
qnorm(0.995)
84.3+(2.575*12)
12/sqrt(15)
*2.575
3.098*2.575
qnorm(0.975)
84.3+3.098*1.95996
90+3.098*1.95996
90-3.098*1.95996
pnorm((84.3-90)/3.098)
1 - pnorm((84.3-90)/3.098)
8/(3.098)
2*0.0328917
1-0.0657
qnorm(-1.8397)
pnorm(-1.8397)
(84.3-90)/3.098
pnorm(-1.839897)
1-0.03289168
pnorm(1.5)
qnorm(0.025)
pnorm(1.132)
1-pnorm(1.132)
2*(1-pnorm((764.1-796.4)/(91.6/sqrt(10))))
(764.1-796.4)/(91.6/sqrt(10))
?std
??standard
sqrt(((11*92.5^2)+(9*91.6^2))/(12+10))
sqrt(1/12+1/10)
87.81017*0.4281744
835.1-764.1
71/37.59807
1-pnorm(0.1)
?pnorm
1-pnorm(1 = 0.1, mean = 850, sd = 100)
pnorm(0.1, 850, 100)
1-pnorm(0.1, 850, 100)
qnorm(0.1, 850, 100)
m=850-796.9
m=m/(100/sqrt(25))
pnorm(m)
2*(1-pnorm(m))
(850-796.9)*5/100
0.996-2.655
pnorm(0.1)
0.5398+0.996
1-pnorm(0.1)
qnorm(0.1)
-1.28+2.655
1.28-2.655
pnorm(1.375)
qnorm(0.1)
qnorm(0.05)
(qnorm(0.1)+qnorm(0.05))^2*100^2/(850-796.9)^2
qnorm(0.005)
qnorm(0.005)^2
6.634897*4
cancer <-(c(2,2,1,2),ncol=2,byrow=TRUE)
cancer <- matrix(c(2,2,1,2),ncol=2,byrow=TRUE)
colnames(cancer) <- c("Has kidney cancer", "Doesn't have kidney cancer")
rownames(cancer) <- c("Has liver cancer", "Doesn't have liver cancer")
cancer <- as.table(cancer)
cancer
cancer <- matrix(c(2,2,1,10),ncol=2,byrow=TRUE)
> colnames(cancer) <- c("Has kidney cancer", "Doesn't have kidney cancer")
> rownames(cancer) <- c("Has liver cancer", "Doesn't have liver cancer")
> cancer <- as.table(cancer)
cancer <- matrix(c(2,2,1,10),ncol=2,byrow=TRUE)
colnames(cancer) <- c("Has kidney cancer", "Doesn't have kidney cancer")
rownames(cancer) <- c("Has liver cancer", "Doesn't have liver cancer")
cancer <- as.table(cancer)
cancer
chisq.test(cancer)
cancer
chisq.test(cancer)
?chisq.test
chisq.test(cancer, NULL, FALSE)
c(4,2)
choose(4,2)
choose(4,2)*choose(11,1)/choose(15,3)+choose(4,3)*choose(11,0)/choose(15,3)
sqrt(0.55*0.45/200)
0.55*0.45*200
sqrt(0.55*0.45/122)
-0.2/0.03517812
qnorm(-5.685352)
pnorm(-5.685352)
pnorm(5.685352)
pnorm((0.55-0.6)/0.03517812)
1 - 0.07760926
(0.55-0.6)/0.03517812
choose(10,1)
choose(10,0)
o.95*10
0.95^10
1-0.95^10
1-0.995^10
1/3+1/1+1/11
qchisq(0.1538462,22)
post=c(147.72,148.10,165.64,150.66,152.26,165.34,151.28,147.06,149.09,146.11,168.55,158.50,156.09,158.29,152.89,171.42,160.60,140.37,159.37)
pre=c(150.52,153.16,167.47,155.56,156.03,168.72,158.69,144.88,149.51,151.43,164.79,157.88,158.21,155.89,150.55,169.30,158.98,139.27,160.61)
SD(POST)
sd(post)
diff=post-pre
mean(diff)
sd(diff)
-1.163684/(3.2401/sqrt(19))
?sd
1 - (2/3)^5
choose(15,10)
permute(15,10)
pick(15,10)
permutation(15,10)
choose(15,10)*factorial(10)
11/10/(8/9)
(8/9)/(11/10)
(11/8)/(10/9)
(11/9)/(10/8)
(11/8)/(9/10)
(0.9)/(10/9)
choose(6,4)
choose(6,4)*choose(10,1)/choose(16,5) + choose(6,5)*choose(10,0)/choose(16,5)
choose(5,4)*choose(11,2)/choose(16,6) + choose(5,5)*choose(11,1)/choose(16,6)
permute(5,4)
permutation
0.2455*0.4428*725
t.test
?t.test
?tnorm
qt?
?
dssd
?qr
?qt
qt(0.975, 48)
0.33105/(sqrt(0.73037)/sqrt(10.82))
0.33105/(sqrt(0.73037/48)/sqrt(10.82))
sqrt(1/50 + 0.26^2/10.82)
qt(0.9, 50)
1.298714*sqrt(0.73037/48)*0.1620114
0.5*(1.205672 - 1.27418)
qt(0.9, 50)*sqrt(0.73037/48)*0.1620114
pt(0.9, 50)*sqrt(0.73037/48)*0.1620114
qt(0.95, 50)*sqrt(0.73037/48)*0.1620114
qt(0.95, 48)*sqrt(0.73037/48)*0.1620114
qt(0.05, 48)*sqrt(0.73037/48)*0.1620114
0.08429 + 0.33105*4
-0.08429 + 0.33105*4
43.99*21.18
2794.39/931.7082
21.18*36+2794.39
3556.87/39
22.1-15.8
6.3/sqrt(5)
6.3/2.817446
qt(2.236068)
qt(2.236068, 18)
pt(2.236068, 18)
0.9808752*2
1- 0.9808752
sqrt(6.3*6.3/10 + 6.3*6.3/10)
0.0191248*2
qt(0.025,9)
2.262157*0.08+6.24
qt(0.05,9)*0.08+6.24
pt(0.05,9)*0.08+6.24
pt(0.05,10)*0.08+6.24
-qt(0.05,10)*0.08+6.24
-qt(0.05,10)*(0.08/sqrt(10))+6.24
-pt(0.05,10)*(0.08/sqrt(10))+6.24
pt(0.05,10)*(0.08/sqrt(10))+6.24
pt(0.025,10)*(0.08/sqrt(10))+6.24
-qt(0.025,10)*(0.08/sqrt(10))+6.24
-qt(0.025,9)*(0.08/sqrt(10))+6.24
-0.2/(1.65/sqrt(10))
pt(-0.3833064)
pnorm(-0.3833064)
qnorm(0.05)
-1.644854*(1.65/sqrt(16)) + 5.1
qt(0.025,14)*0.54
-1.158185+2.1
0.2857+qnorm(0.05)*sqrt(0.2857*(1-0.2857)/42)
0.3833-0.2857
sqrt(0.3833*(1-0.3833)/60)
0.0976/0.06276691
pnorm(1.554959)
qnorm(1.554959)
1-pnorm(1.554959)
1-(0.05997792/2)
sqrt(0.2857*(1-0.2857)/60)
pnorm(0.0976/0.05832031)
choose(4,0)*(0.2857)^0*(1-0.2857)^4 + choose(4,1)*(0.2857)^1*(1-0.2857)^3
choose(6,3)*choose(6,3)
400/choose(6,6)
choose(6,3)*choose(24,9)/choose(30,12)
choose(30,15)*0.52^15*0.48^15
qnorm(0.25)
-0.6744898*20.2+325
source("https://bioconductor.org/biocLite.R")
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
updateR()
updateR()
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite()
mtcars
x = '5'
x.coerce(int)
x.class
class(x)
integer.coerce(x)
int.coerce(x)
as.numeric(x)
mtcars[6,]
class(mtcars[6,])
as.vector(mtcars[6,])
v = as.vector(mtcars[6,])
v *= 2
v = v * 2
v
mtcars(0)
mtcars[0]
mtcars[1,]
mtcars[0,]
mtcars[1:5,2:4]
a == 1
a= 1
a == 1
a == "1"
mtcars[$ == 6]
rownames(mtcars)
mtcars[mtcars$cyl == 6]
attr(mtcars, "name")
mtcars$rownames
mtcars$name
mtcars$colnames
colnames(mtcars)
mtcars[rownames(mtcars) == "Mazda RX4"]
mtcars[rownames(mtcars) == "Valiant",]
mtcars[,colnames(mtcars) == "cyl"]
mtcars[colnames(mtcars) == "cyl",]
mtcars[rownames(mtcars) == "Valiant", colnames(mtcars) == "cyl"]
mtcars[mtcars$mpg > 21,]
mtcars[,mtcars$mpg > 21]
y <- mtcars[mtcars$mpg > 21,]
y
x
x <- x
x
x === 5
view(y)
library("utils", lib.loc="C:/Program Files/R/R-3.4.4/library")
view(y)
View(y, "mpg > 21")
is.empty.model(y)
?is.empty.model
source('C:/Users/Umaseh/Desktop/practice.R')
testFunction
attributes(testFunction)
testFunction()
class
class(testFunction)
a
source('C:/Users/Umaseh/Desktop/practice.R')
testFunction()
#wake me up inside
source('C:/Users/Umaseh/Desktop/practice2.R')
source('C:/Users/Umaseh/Desktop/practice.R')
testFunction()
source('C:/Users/Umaseh/Desktop/practice.R')
testFunction()
install.packages("ggplot2")
source('https://bioconductor.org/biocLite.R')
biocLite()
biocLite('limma')
installed.packages()%>% .[, c("Package", "LibPath")]
library("magrittr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
installed.packages()%>% .[, c("Package", "LibPath")]
plot(mtcars$mpg, mtcars$hp)
biocLite()
installed.packages()%>% .[, c("Package", "LibPath")]
library("BiocInstaller", lib.loc="~/R/win-library/3.4")
biocLite()
biocLite('limma')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(5, 5, 5)
r
plot(r)
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
str = makeRandSeq(10)
r = randSeqMatrix(10, 10, 5)
sum(r == "ATTGA")
r = randSeqMatrix(10, 10, 5)
sum(r == "ATTGA")
r = randSeqMatrix(10, 10, 5)
sum(r == "ATTGA")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, 5)
sum(r == "ATTGA")
r = randSeqMatrix(12, 12, 5)
sum(r == "ATTGA")
r = randSeqMatrix(12, 12, 5)
sum(r == "ATTGA")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, "GCAT")
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
r = randSeqMatrix(12, 12, NA, "GCAT")
summary(r)
summary(as.vector(x))
summary(as.vector(r))
summary(as.vector(summary(x)))
summary(as.vector(summary(r)))
summary(summary(r))
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
a = aggregate(r)
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
a = aggregate(r)
View(a)
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
a = aggregate(r)
View(a)
source('C:/Users/Umaseh/Desktop/randSeqMatrix.R')
a = aggregate(r)
View(a)
querying_GO.R
source('C:/Users/Umaseh/Desktop/querying_GO.R')
source('C:/Users/Umaseh/Desktop/querying_GO.R')
source('C:/Users/Umaseh/Desktop/querying_GO.R')
source('C:/Users/Umaseh/Desktop/querying_GO.R')
biocLite()
source('C:/Users/Umaseh/Desktop/querying_GO.R')
View(GOdb)
ls("package:GO.db")
ls("package:hgu95av2.db")
GOdb[1:20,]
source('C:/Users/Umaseh/Desktop/querying_GO.R')
source('C:/Users/Umaseh/Desktop/querying_GO.R')
geneGOSearch(c("disease"))
geneGOSearch(c("disease", "protein"))
geneGOSearch(c("disease", "protein", "aggregat"))
geneGOSearch(c("protein", "aggregat"))
geneGOSearch(c("protein", "aggregat", "human"))
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
# using the package:
updateR()
install.packages("packrat")
packrat::init("~/R/projects/genequery")
source('~/R/projects/genequery/MyGene.R')
source("https://bioconductor.org/biocLite.R")
biocLite()
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="C:/Program Files/R/R-3.5.0/library")
biocLite("mygene")
library(BiocInstaller)
biocValid()             ## R version 3.0 or later
biocLite("stringi")
biocValid()             ## R version 3.0 or later
library("stringi", lib.loc="C:/Program Files/R/R-3.5.0/library")
biocValid()             ## R version 3.0 or later
biocLite("stringi")
biocLite("stringi")
install.packages("stringi")
install.packages("stringi")
ip <- as.data.frame(installed.packages())
head(ip)
ip <- subset(ip, !grepl("MRO", ip$LibPath))
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
path.lib <- unique(ip$LibPath)
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
install.packages(c("MASS", "survival"))
install.packages("C:/Users/Umaseh/Downloads/MASS_7.3-50.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Umaseh/Downloads/survival_2.42-3.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Umaseh/Downloads/survival_2.42-3.tar.gz", repos = NULL, type = "source")
getBioMartData(c('BRCA1','BRCA2'))
source('~/R/projects/genequery/BioMart.R')
setwd("~/R/projects/genequery")
getBioMartData(c('BRCA1','BRCA2'))
source('~/R/projects/genequery/MyGene.R')
source('~/R/projects/genequery/BioMart.R')
source('~/R/projects/genequery/BioMart.R')
source('~/R/projects/genequery/UniProt.R')
source('~/R/projects/genequery/UniProt.R')
source('~/R/projects/genequery/UniProt.R')
source('~/R/projects/genequery/main.R')
findVerifiedGenes(c('protein', 'aggregat'), 500/3)
r <- findVerifiedGenes(c('protein', 'aggregat'), 500/3)
View(r)
r[["RPS19"]]
r[["SKP1"]]
source('~/R/projects/genequery/MyGene.R')
source('~/R/projects/genequery/BioMart.R')
source('~/R/projects/genequery/MyGene.R')
source('~/R/projects/genequery/MyGene.R')
source('~/R/projects/genequery/Entrez.R')
source('~/R/projects/genequery/MyGene.R')
source('~/R/projects/genequery/Entrez.R')
source('~/R/projects/genequery/BioMart.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
source('~/R/projects/genequery/Entrez.R')
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
source('~/R/projects/genequery/Entrez.R')
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
View(q)
View(r)
source('~/R/projects/genequery/Entrez.R')
q <- getEntrezDataSingleGene('SKP1', c('protein', 'aggregat'))
View(q)
source('~/R/projects/genequery/Entrez.R')
getEntrezData(c('SKP1', 'VAMP1'), c('protein', 'aggregat'))
q <- getEntrezData(c('SKP1', 'VAMP1'), c('protein', 'aggregat'))
View(q)
source('~/R/projects/genequery/main.R')
source('~/R/projects/genequery/main.R')
install.packages("rstudioapi")
source('~/R/projects/genequery/main.R')
source('~/R/projects/genequery/main.R')
r <- getEntrezData(c('SKP1', 'VAMP1'), c('protein', 'aggregat'))
View(r)
